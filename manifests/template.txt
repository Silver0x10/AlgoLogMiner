{
    "xesExtensions" : [
        {"name" : <Extension name>, "prefix" : <Extension prefix>, "uri" : <Extension uri>}
    ],
    "xesGlobals" : [
        {"key" : <Attribute name>, "type" : <Attribute type>, "value" : <Attribute default value>, "scope" : <trace or event>}
    ],
    "xesClassifiers" : [
        {"name" : <Classifier name>, "keys" : [ <Classifier keys> ]}
    ],
    "switches" : {
        <Switch identifier name> : {
            <Case> : <Mapped value>
        }
    },
    "mappings" : [
        {   
            "indexerFilters" : [
                [ 
                    {"key" : <Indexer filter name>, "val" : <Indexer filter argument>, "type" : <Indexer filter argument type>}
                ]
            ],
            "logMappings" : [
                {
                    "mappingName" : <Mapping name>,
                    "singleTxnFilters" : {
                        <Transaction position*> : [ <Transaction field value> ]
                    },
                    "traceMappings" : [
                        {
                            "identifier:id" : { "static" : { "value" : <Attribute value>, "type" : <Attribute type> } }
                            or
                            "identifier:id" : { "parameter" : { "key" : <Position in the transaction where to find the value*>, "type" : <Attribute type> } }
                            or
                            "identifier:id" : { "selector" : { "switch" : <Switch identifier name>, "value" : <Value (present in the switch) for which there is a match>, "key" : <Position in the transaction where to find the value to check*>, "type" : <Attribute type> } }
                            or
                            "identifier:id" : { "switch" : { "switch" : <Switch identifier name>, "key" : <Position in the transaction where to find the value to map*>, "type" : <Attribute type> } }

                            <Event attribute**> : { "static" : { "value" : <Attribute value>, "type" : <Attribute type> } }
                            and/or
                            <Event attribute**> : { "parameter" : { "key" : <Position in the transaction where to find the value*>, "type" : <Attribute type> } }
                            and/or
                            <Event attribute**> : { "selector" : { "switch" : <Switch identifier name>, "value" : <Value (present in the switch) for which there is a match>, "key" : <Position in the transaction where to find the value to check*>, "type" : <Attribute type> } }
                            and/or
                            <Event attribute**> : { "switch" : { "switch" : <Switch identifier name>, "key" : <Position in the transaction where to find the value to map*>, "type" : <Attribute type> } }
                        }
                    ],
                    "eventMappings" : [
                        {
                            <Event attribute**> : { "static" : { "value" : <Attribute value>, "type" : <Attribute type> } }
                            and/or
                            <Event attribute**> : { "parameter" : { "key" : <Position in the transaction where to find the value*>, "type" : <Attribute type> } }
                            and/or
                            <Event attribute**> : { "selector" : { "switch" : <Switch identifier name>, "value" : <Value (present in the switch) for which there is a match>, "key" : <Position in the transaction where to find the value to check*>, "type" : <Attribute type> } }
                            and/or
                            <Event attribute**> : { "switch" : { "switch" : <Switch identifier name>, "key" : <Position in the transaction where to find the value to map*>, "type" : <Attribute type> } }
                        }
                    ]                
                }
            ]
        }
    ]
}
 
* Use "." for enter in nested position
**  preceded by his extension (if present), separated by ":"